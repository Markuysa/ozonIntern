// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.0
// source: service.proto

package gen

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// LinksCreatorClient is the client API for LinksCreator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LinksCreatorClient interface {
	GetLink(ctx context.Context, in *GetLinkRequest, opts ...grpc.CallOption) (*GetLinkResponse, error)
	SaveLink(ctx context.Context, in *SaveLinkRequest, opts ...grpc.CallOption) (*SaveLinkResponse, error)
}

type linksCreatorClient struct {
	cc grpc.ClientConnInterface
}

func NewLinksCreatorClient(cc grpc.ClientConnInterface) LinksCreatorClient {
	return &linksCreatorClient{cc}
}

func (c *linksCreatorClient) GetLink(ctx context.Context, in *GetLinkRequest, opts ...grpc.CallOption) (*GetLinkResponse, error) {
	out := new(GetLinkResponse)
	err := c.cc.Invoke(ctx, "/protobuf.LinksCreator/GetLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linksCreatorClient) SaveLink(ctx context.Context, in *SaveLinkRequest, opts ...grpc.CallOption) (*SaveLinkResponse, error) {
	out := new(SaveLinkResponse)
	err := c.cc.Invoke(ctx, "/protobuf.LinksCreator/SaveLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinksCreatorServer is the server API for LinksCreator service.
// All implementations must embed UnimplementedLinksCreatorServer
// for forward compatibility
type LinksCreatorServer interface {
	GetLink(context.Context, *GetLinkRequest) (*GetLinkResponse, error)
	SaveLink(context.Context, *SaveLinkRequest) (*SaveLinkResponse, error)
	mustEmbedUnimplementedLinksCreatorServer()
}

// UnimplementedLinksCreatorServer must be embedded to have forward compatible implementations.
type UnimplementedLinksCreatorServer struct {
}

func (UnimplementedLinksCreatorServer) GetLink(context.Context, *GetLinkRequest) (*GetLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLink not implemented")
}
func (UnimplementedLinksCreatorServer) SaveLink(context.Context, *SaveLinkRequest) (*SaveLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveLink not implemented")
}
func (UnimplementedLinksCreatorServer) mustEmbedUnimplementedLinksCreatorServer() {}

// UnsafeLinksCreatorServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LinksCreatorServer will
// result in compilation errors.
type UnsafeLinksCreatorServer interface {
	mustEmbedUnimplementedLinksCreatorServer()
}

func RegisterLinksCreatorServer(s grpc.ServiceRegistrar, srv LinksCreatorServer) {
	s.RegisterService(&LinksCreator_ServiceDesc, srv)
}

func _LinksCreator_GetLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinksCreatorServer).GetLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.LinksCreator/GetLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinksCreatorServer).GetLink(ctx, req.(*GetLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinksCreator_SaveLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinksCreatorServer).SaveLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.LinksCreator/SaveLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinksCreatorServer).SaveLink(ctx, req.(*SaveLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LinksCreator_ServiceDesc is the grpc.ServiceDesc for LinksCreator service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LinksCreator_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.LinksCreator",
	HandlerType: (*LinksCreatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLink",
			Handler:    _LinksCreator_GetLink_Handler,
		},
		{
			MethodName: "SaveLink",
			Handler:    _LinksCreator_SaveLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
